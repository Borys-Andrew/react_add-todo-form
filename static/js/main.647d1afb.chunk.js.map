{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","usersFromServer","find","todosWithUser","userId","App","useState","setTodos","setTitle","selectedUser","setSelectedUser","hasTitleError","setHasTitleError","hasSelectUserError","setHasSelectUserError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","currentTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.647d1afb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { TodosWithUser } from '../../types';\n\ninterface Props {\n  todo: TodosWithUser\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames('TodoInfo', {\n          'TodoInfo--completed': completed,\n        })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodosWithUser } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: TodosWithUser[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { ChangeEvent, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodosWithUser, User } from './types';\nimport { TodoList } from './components/TodoList';\n\nconst getUserById = (id: number): User | null => {\n  const foundUser = usersFromServer.find(user => id === user.id);\n\n  return foundUser || null;\n};\n\nconst todosWithUser: TodosWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.id),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<TodosWithUser[]>(todosWithUser);\n\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasSelectUserError, setHasSelectUserError] = useState(false);\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+event.target.value);\n    setHasSelectUserError(false);\n  };\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setSelectedUser(0);\n  };\n\n  const handleSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n\n    setHasSelectUserError(!selectedUser);\n    setHasTitleError(!title);\n\n    const largestId = Math.max(...todos.map(todo => todo.id));\n\n    const newTodo = {\n      id: largestId + 1,\n      title,\n      completed: false,\n      userId: +selectedUser,\n      user: getUserById(+selectedUser),\n    };\n\n    if (title && selectedUser) {\n      setTodos(currentTodos => [...currentTodos, newTodo]);\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              name=\"title\"\n              value={title}\n              onChange={handleInput}\n            />\n          </label>\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={selectedUser}\n              onChange={handleSelect}\n              placeholder=\"Choose a user\"\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map((user) => (\n                <option key={user.id} value={`${user.id}`}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n\n          {hasSelectUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}